{"version":3,"sources":["./src/app/modules/application/application-attribute-options/application-attribute-options.component.ts","./src/app/modules/application/application-attribute-options/application-attribute-options.component.html","./src/app/modules/application/application-view/application-view.component.ts","./src/app/modules/application/application-view/application-view.component.html","./src/app/modules/application/application.module.ts","./src/app/modules/application/application/application.component.ts","./src/app/modules/application/application/application.component.html","./src/app/modules/application/test/test.component.ts","./src/app/modules/application/test/test.component.html"],"names":[],"mappings":"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","file":"modules-application-application-module-es2015.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-application-attribute-options',\r\n  templateUrl: './application-attribute-options.component.html',\r\n  styleUrls: ['./application-attribute-options.component.scss']\r\n})\r\nexport class ApplicationAttributeOptionsComponent implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public attributeOptions = [];\r\n  public showDescription = true;\r\n  public editId;\r\n  @Input() id: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private localdata: LocalDataService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n\r\n    if (environment.staticData){\r\n      const values = this.localdata.get('attributeOptions');\r\n      if (!values){\r\n        return;\r\n      }\r\n\r\n      const attrId = this.id.replace(/\\ /g, '_').toLowerCase();\r\n      this.attributeOptions = values[`attr-opts-${attrId}`] || [];\r\n      return;\r\n    }\r\n  }\r\n\r\n  private buildForm(): void{\r\n    this.form = this.formBuilder.group({\r\n      value: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  add(): void {\r\n    if (this.form.invalid) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n\r\n    const formValues = this.form.value;\r\n\r\n    const translations = formValues.translations.map( x => {\r\n      return {\r\n        keyVal: formValues.value,\r\n        langId: Number(x.language),\r\n        value: x.value\r\n      };\r\n    });\r\n    formValues.translations = translations;\r\n    const data = {\r\n      id: new Date().getTime(),\r\n      value: formValues.value,\r\n      translations,\r\n      default: false\r\n    };\r\n    if (!this.editId) {\r\n      this.attributeOptions.push(data);\r\n    } else {\r\n      this.attributeOptions = this.attributeOptions.map( x => {\r\n        if (x.id === this.editId) {\r\n          return data;\r\n        }\r\n        return x;\r\n      });\r\n    }\r\n\r\n\r\n    this.form.reset();\r\n    this.showDescription = false;\r\n    this.saveLocalData();\r\n    setTimeout( x => {\r\n      this.showDescription = true;\r\n    }, 100);\r\n  }\r\n\r\n  setDefault(id, value): void{\r\n    this.attributeOptions.map( x => {\r\n      if (id === x.id) {\r\n        x.default = !value;\r\n      } else {\r\n        x.default = false;\r\n      }\r\n      return x;\r\n    });\r\n    this.saveLocalData();\r\n  }\r\n\r\n  edit(option): void{\r\n    this.editId = option.id;\r\n    this.form.get('value').patchValue(option.value);\r\n    this.showDescription = false;\r\n    setTimeout( x => {\r\n      this.showDescription = true;\r\n      this.appendCurrentTranslations(option.translations);\r\n    });\r\n  }\r\n\r\n  cancelEdit(): void{\r\n    this.editId = null;\r\n    this.form.reset();\r\n    this.showDescription = false;\r\n    setTimeout( x => {\r\n      this.showDescription = true;\r\n    });\r\n  }\r\n\r\n  private appendCurrentTranslations(translations: any[]): void{\r\n    this.form.removeControl('translations');\r\n    this.form.addControl('translations', this.formBuilder.array([], Validators.required));\r\n\r\n    translations.forEach( x => {\r\n      const group = this.formBuilder.group({\r\n        language: [x.langId.toString(), Validators.required],\r\n        value: [x.value, Validators.required]\r\n      });\r\n      (this.form.get('translations') as FormArray).push(group);\r\n    });\r\n  }\r\n\r\n  delete(id): void{\r\n    const sure = confirm('Are you sure?');\r\n    if (!sure) {\r\n      return;\r\n    }\r\n\r\n    this.attributeOptions = this.attributeOptions.filter( x => x.id !== id);\r\n    this.saveLocalData();\r\n  }\r\n\r\n  private saveLocalData(): void {\r\n    const attrId = this.id.replace(/\\ /g, '_').toLowerCase();\r\n    const toSave = {\r\n      ['attr-opts-' + attrId]: this.attributeOptions\r\n    };\r\n    const oldvalues = this.localdata.get('attributeOptions');\r\n    if (!oldvalues){\r\n      this.localdata.save('attributeOptions', {\r\n        ...toSave\r\n      });\r\n    } else {\r\n      this.localdata.save('attributeOptions', {\r\n        ...oldvalues,\r\n        ...toSave\r\n      });\r\n    }\r\n  }\r\n}\r\n","<ul class=\"nav nav-tabs\" >\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link active\">Options</a>\r\n      </li>\r\n</ul>\r\n<form class=\"fform fform--inline optionsForm\" [formGroup]=\"form\">\r\n    <div class=\"form-group flex-2\" >\r\n      <label>Description:</label> \r\n      <app-language-field *ngIf=\"showDescription\" [title]=\"'Description'\" [form]=\"form\"></app-language-field> \r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Value: </label>\r\n        <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"value\">\r\n    </div>\r\n    <button type=\"button\" class=\"btn btn-sm  btn-primary\" (click)=\"add()\">{{editId ? 'Update' : 'Add'}}</button>\r\n    <button *ngIf=\"editId\" type=\"button\" class=\"btn btn-sm  btn-secondary\" (click)=\"cancelEdit()\">Cancel</button>\r\n</form>\r\n\r\n<div class=\"table-list optionsList\" >  \r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Value</th>\r\n                <th scope=\"col\">Default</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let option of attributeOptions\"> \r\n                <td>\r\n                    {{option.translations | itranslate}}\r\n                </td>\r\n                <td>\r\n                    {{option.value}}\r\n                </td>\r\n                <td>\r\n                    <div class=\"form-check\">\r\n                        <input \r\n                            (change)=\"setDefault(option.id, option.default)\"\r\n                            type=\"checkbox\" class=\"form-check-input\" [checked]=\"option.default\"> \r\n                    </div>\r\n                </td>\r\n                <td class=\"table-list__actions\">\r\n                    <a (click)=\"edit(option)\">edit</a> | <a (click)=\"delete(option.id)\">delete</a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>     ","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { JkWaitService } from 'jk-wait';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IApplication } from '../application/application.component';\r\n\r\n\r\nexport interface IApplicationAttribute  {\r\n  id: string;\r\n  type: string;\r\n  translations: any[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-application-view',\r\n  templateUrl: './application-view.component.html',\r\n  styleUrls: ['./application-view.component.scss']\r\n})\r\nexport class ApplicationViewComponent implements OnInit {\r\n\r\n  public application: IApplication;\r\n  public applicationAttributes: any[] = [];\r\n  public modalTitle: string;\r\n  public saveButtonText: string;\r\n  public editId: string;\r\n  public form: FormGroup;\r\n  public applicationForm: FormGroup;\r\n  public showModal = false;\r\n  public isExistingAttribute = false;\r\n  public allAttributes = [];\r\n\r\n  // TEMP\r\n  activeTab = 'details';\r\n\r\nconstructor(\r\n    private formBuilder: FormBuilder,\r\n    private localdata: LocalDataService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private wait: JkWaitService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.application = this.localdata.get('application');\r\n    this.buildForm();\r\n    setTimeout( x => {\r\n      this.appendCurrentTranslations(this.applicationForm, this.application.translations);\r\n    }, 0);\r\n\r\n    if (environment.staticData){\r\n      const values = this.localdata.get('applicationAttributes');\r\n      this.getAllAttributes();\r\n      if (!values){\r\n        return;\r\n      }\r\n\r\n      const appId = this.application.systemId.replace(/\\ /g, '_').toLowerCase();\r\n      this.applicationAttributes = values[`app-attr-${appId}`] || [];\r\n      return;\r\n    }\r\n\r\n    this.applicationAttributes = [];\r\n    this.getApplicationAttribute(this.application.systemId);\r\n  }\r\n\r\n  getAllAttributes(): any{\r\n    const values = this.localdata.get('applicationAttributes');\r\n    if (!values){\r\n      return;\r\n    }\r\n    Object.values(values).forEach((attrs: any) => {\r\n      this.allAttributes = [\r\n        ...this.allAttributes,\r\n        ...attrs\r\n      ];\r\n    });\r\n    return values;\r\n  }\r\n\r\n  hasAttribute(id): boolean{\r\n    return this.applicationAttributes.filter( x => x.attbId === id).length > 0;\r\n  }\r\n\r\n  toggleExistingAttribute(): void{\r\n    this.isExistingAttribute = !this.isExistingAttribute;\r\n    this.form.reset();\r\n  }\r\n\r\n  private saveLocalData(): void {\r\n    const appId = this.application.systemId.replace(/\\ /g, '_').toLowerCase();\r\n    const toSave = {\r\n      ['app-attr-' + appId]: this.applicationAttributes\r\n    };\r\n    const oldvalues = this.localdata.get('applicationAttributes');\r\n    if (!oldvalues){\r\n      this.localdata.save('applicationAttributes', {\r\n        ...toSave\r\n      });\r\n    } else {\r\n      this.localdata.save('applicationAttributes', {\r\n        ...oldvalues,\r\n        ...toSave\r\n      });\r\n    }\r\n  }\r\n\r\n  getApplicationAttribute(id: string): void{\r\n    this.api.list('applicationroleattribute/getApplicationRoleAttribute', {\r\n      systemId: id\r\n    }).subscribe( x => {\r\n      this.applicationAttributes = x.roleAttr;\r\n      console.log(x.roleAttr);\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      id: ['', [Validators.required]],\r\n      type: ['', [Validators.required]],\r\n      existing: ['', []],\r\n    });\r\n    this.applicationForm = this.formBuilder.group({\r\n      systemId: [this.application.systemId, [Validators.required]]\r\n    });\r\n  }\r\n\r\n\r\n  showAppForm(type: string, app?: any): void {\r\n    if (type === 'add') {\r\n      this.modalTitle = 'New Attibute';\r\n      this.saveButtonText = 'Save';\r\n      this.editId = null;\r\n    } else {\r\n      this.editId = app.attbId;\r\n      this.saveButtonText = 'Update';\r\n      this.modalTitle = `Edit ${app.attbId}`;\r\n      this.form.get('id').patchValue(app.attbId);\r\n      this.form.get('type').patchValue(app.attbType);\r\n      setTimeout( x => {\r\n        this.appendCurrentTranslations(this.form, app.translations);\r\n      }, 0);\r\n    }\r\n\r\n    this.showModal = true;\r\n  }\r\n\r\n  private appendCurrentTranslations(form, translations: any[]): void{\r\n    translations.forEach( x => {\r\n      const group = this.formBuilder.group({\r\n        language: [x.langId.toString(), Validators.required],\r\n        value: [x.value, Validators.required]\r\n      });\r\n      (form.get('translations') as FormArray).push(group);\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.form.reset();\r\n    this.showModal = false;\r\n    this.isExistingAttribute = false;\r\n  }\r\n\r\n\r\n  submitForm(): void{\r\n    this.form.markAllAsTouched();\r\n\r\n    if (this.isExistingAttribute) {\r\n      const attrId = this.form.value.existing;\r\n      if (attrId.length === 0){\r\n        return;\r\n      }\r\n      const attribute = this.allAttributes.filter( x => x.attbId === attrId)[0];\r\n      this.applicationAttributes.push(attribute);\r\n      this.saveLocalData();\r\n      this.form.reset();\r\n      this.showModal = false;\r\n      this.isExistingAttribute = false;\r\n      return;\r\n    }\r\n\r\n    if (this.form.invalid) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n\r\n    const {id, type, translations}: IApplicationAttribute = this.form.value;\r\n\r\n    const data = {\r\n      attbId: id,\r\n      attbType: type,\r\n      attbTitle: id,\r\n      systemId: this.application.systemId,\r\n      translations: translations.map( x => {\r\n        return {\r\n          keyVal: id,\r\n          langId: Number(x.language),\r\n          value: x.value\r\n        };\r\n      })\r\n    };\r\n\r\n    if (!this.editId) {\r\n      if (environment.staticData) {\r\n        this.applicationAttributes.push(data);\r\n        this.saveLocalData();\r\n        this.editId = id;\r\n        this.modalTitle = 'Edit ' + id;\r\n        this.saveButtonText = 'Update';\r\n        // this.form.reset();\r\n        return;\r\n      }\r\n\r\n      this.api.create('roleattribute/createRoleAttribute', data).subscribe( x => {\r\n        this.showModal = false;\r\n        this.form.reset();\r\n      });\r\n    } else {\r\n      this.updateAttribute(data, this.editId);\r\n    }\r\n  }\r\n\r\n  updateAttribute(data, oldId): void {\r\n\r\n    if (environment.staticData) {\r\n\r\n      // update options id if id changed\r\n      if (oldId !== data.attbId) {\r\n          let allOptions = this.localdata.get('attributeOptions');\r\n          if (Object.keys(allOptions).length > 0) {\r\n            const attrId = oldId.replace(/\\ /g, '_').toLowerCase();\r\n            const atributeOptions = allOptions['attr-opts-' + attrId];\r\n            delete allOptions['attr-opts-' + attrId];\r\n            const newAttrId = data.attbId.replace(/\\ /g, '_').toLowerCase();\r\n            allOptions = {\r\n              ...allOptions,\r\n              ['attr-opts-' + newAttrId] : atributeOptions\r\n            };\r\n            this.localdata.save('attributeOptions', allOptions);\r\n          }\r\n      }\r\n\r\n\r\n      this.applicationAttributes = this.applicationAttributes.filter( x => x.attbId !== oldId);\r\n      this.applicationAttributes.push(data);\r\n      this.saveLocalData();\r\n      this.form.reset();\r\n      this.showModal = false;\r\n      return;\r\n    }\r\n\r\n    this.api.create('roleattribute/updateRoleAttribute', {\r\n      ...data,\r\n      oldAttbId: oldId,\r\n    }).subscribe( x => {\r\n      this.showModal = false;\r\n      this.form.reset();\r\n    });\r\n  }\r\n\r\n  async delete(app: any): Promise<any> {\r\n    const sure = confirm('Are you sure?');\r\n    if (!sure){\r\n      return;\r\n    }\r\n\r\n    if (environment.staticData) {\r\n      this.applicationAttributes = this.applicationAttributes.filter( x => x.attbId !== app.attbId);\r\n      this.saveLocalData();\r\n      return;\r\n    }\r\n    const data = {\r\n      roleAttributeId: app.attbId,\r\n      systemId: this.application.systemId\r\n    };\r\n    await this.api.create('applicationroleattribute/deleteApplicationRoleAttribute', data).toPromise();\r\n    this.applicationAttributes = this.applicationAttributes.filter( x => app.attbId !== x.attbId);\r\n  }\r\n\r\n\r\n  update(): void {\r\n    const formValue = this.applicationForm.value;\r\n    const translations = formValue.translations.map( x => {\r\n      return {\r\n        keyVal: formValue.systemId,\r\n        langId: Number(x.language),\r\n        value: x.value\r\n      };\r\n    });\r\n    // const updateData = {\r\n    //   oldSystemId: this.application.systemId,\r\n    //   systemDescription: formValue.systemId,\r\n    //   systemId: formValue.systemId,\r\n    //   translations,\r\n    // };\r\n\r\n    // update application attributes id if id changed\r\n    if (this.application.systemId !== formValue.systemId) {\r\n      let allAttributes = this.localdata.get('applicationAttributes');\r\n      if (Object.keys(allAttributes).length > 0) {\r\n        const appId = this.application.systemId.replace(/\\ /g, '_').toLowerCase();\r\n        const appAtribute = allAttributes['app-attr-' + appId];\r\n        delete allAttributes['app-attr-' + appId];\r\n        const newAppId = formValue.systemId.replace(/\\ /g, '_').toLowerCase();\r\n        allAttributes = {\r\n          ...allAttributes,\r\n          ['app-attr-' + newAppId] : appAtribute\r\n        };\r\n        this.localdata.save('applicationAttributes', allAttributes);\r\n      }\r\n    }\r\n\r\n    this.localdata.save('application' , {\r\n      systemId: formValue.systemId,\r\n      systemDescription: formValue.systemId,\r\n      translations,\r\n    });\r\n\r\n    const apps = this.localdata.get('applications').map( x => {\r\n      if (x.systemId === this.application.systemId) {\r\n        x.systemId = formValue.systemId;\r\n        x.systemDescription = formValue.systemId;\r\n        x.translations = translations;\r\n      }\r\n      return x;\r\n    });\r\n    this.localdata.save('applications' , apps);\r\n\r\n    this.wait.start();\r\n    setTimeout( x => {\r\n      alert('Success');\r\n      this.wait.end();\r\n    }, 500);\r\n\r\n  }\r\n\r\n\r\n  cancel(): void{\r\n    this.router.navigate(['application']);\r\n  }\r\n}\r\n","<nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\"> \r\n        <li class=\"breadcrumb-item\">\r\n            <a [routerLink]=\"['/application']\">Application</a>\r\n        </li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {{application.systemId}}\r\n        </li>\r\n    </ol>\r\n</nav>\r\n\r\n\r\n<form [formGroup]=\"applicationForm\" class=\"section application fform fform--inline\">\r\n    <div class=\"form-group form-group-sm\">\r\n        <label>\r\n            System ID:\r\n            <!-- <strong>{{application.systemId}}</strong> -->\r\n        </label>\r\n        <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"systemId\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>\r\n            Description:\r\n            <app-language-field [title]=\"'Description'\" [form]=\"applicationForm\"></app-language-field> \r\n            <!-- <strong>{{application.translations | itranslate}}</strong> -->\r\n        </label>\r\n        <!-- <textarea class=\"form-control form-control-sm\" rows=\"3\" readonly></textarea> -->\r\n    </div>  \r\n    <div class=\"form-group\">\r\n        <button class=\"btn btn-sm btn-primary\" (click)=\"update()\">Update</button>\r\n        <button class=\"btn btn-sm btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"table-list\">\r\n\r\n    <div class=\"table-list__buttons\">\r\n        <label>Attributes</label>\r\n        <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"showAppForm('add')\">Add New Attribute</button>\r\n    </div>\r\n\r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Type</th>                \r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let attribute of applicationAttributes\"> \r\n                <td>\r\n                    {{attribute.attbId}}\r\n                </td>\r\n                <td>\r\n                    {{ attribute.translations | itranslate }}\r\n                </td>\r\n                <td>\r\n                    {{attribute.attbType}}\r\n                </td>\r\n                <td class=\"table-list__actions\">\r\n                    <!-- <a>view</a> | -->\r\n                    <a (click)=\"showAppForm('edit', attribute)\">edit</a> | \r\n                    <a (click)=\"delete(attribute)\">delete</a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<app-modal\r\n    class=\"large\"\r\n    [show]=\"showModal\"\r\n    [saveBtn]=\"saveButtonText\"\r\n    [closeBtn]=\"'Cancel'\"\r\n    [title]=\"modalTitle\"\r\n    (close)=\"closeModal()\"\r\n    (submit)=\"submitForm()\"\r\n>\r\n    <!-- <ul class=\"nav nav-tabs\" *ngIf=\"activeTab !== 'options'\">\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link active\">Details</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"activeTab='options'\">Options</a>\r\n        </li>\r\n    </ul> -->\r\n    <form [formGroup]=\"form\" class=\"fform fform--inline\">     \r\n        <div *ngIf=\"!editId\" class=\"form-check form-check-inline existingAttribute\">\r\n            <input \r\n                (change)=\"toggleExistingAttribute()\"\r\n                class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" [checked]=\"isExistingAttribute\">               \r\n            <label class=\"form-check-label\" for=\"inlineCheckbox1\">Existing Attribute</label>\r\n        </div>\r\n        <ng-container *ngIf=\"isExistingAttribute\">\r\n            <div class=\"form-group\">\r\n                <label>Attribute: </label> \r\n                <select \r\n                    [ngClass]=\"{'is-invalid': form.controls.existing.invalid && form.controls.existing.touched}\"\r\n                    formControlName=\"existing\" class=\"form-control form-control-sm\">\r\n                    <option></option>\r\n                    <ng-container *ngFor=\"let attr of allAttributes\">\r\n                        <option *ngIf=\"!hasAttribute(attr.attbId)\" [value]=\"attr.attbId\">{{attr.attbId}}</option>\r\n                    </ng-container> \r\n\r\n                </select>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!isExistingAttribute\">\r\n            <div class=\"form-group\">\r\n                <label>ID: </label> \r\n                <input \r\n                    formControlName=\"id\" type=\"text\" class=\"form-control form-control-sm\" \r\n                    [ngClass]=\"{'is-invalid': form.controls.id.invalid && form.controls.id.touched}\">\r\n            </div> \r\n            <div class=\"form-group\">\r\n                <label>Type: </label> \r\n                <select \r\n                    [ngClass]=\"{'is-invalid': form.controls.type.invalid && form.controls.type.touched}\"\r\n                    formControlName=\"type\" class=\"form-control form-control-sm\">\r\n                    <option></option>\r\n                    <option value=\"string\">String</option>\r\n                    <option value=\"numeric\">Numeric</option>\r\n                    <option value=\"boolean\">Boolean</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Title: </label>\r\n                <app-language-field [title]=\"'Title'\" *ngIf=\"showModal\" [form]=\"form\"></app-language-field> \r\n            </div>\r\n        </ng-container>\r\n        \r\n    </form>\r\n    <br>\r\n\r\n    <app-application-attribute-options [id]=\"editId\" *ngIf=\"editId && showModal\"></app-application-attribute-options>\r\n    \r\n     \r\n</app-modal>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApplicationComponent } from './application/application.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ApplicationViewComponent } from './application-view/application-view.component';\r\nimport { TestComponent } from './test/test.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ApplicationAttributeOptionsComponent } from './application-attribute-options/application-attribute-options.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ApplicationComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ApplicationViewComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ApplicationComponent,\r\n    ApplicationViewComponent,\r\n    TestComponent,\r\n    ApplicationAttributeOptionsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class ApplicationModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { timestamp } from 'rxjs/operators';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport interface IApplication  {\r\n  systemId: string;\r\n  translations?: any[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-application',\r\n  templateUrl: './application.component.html',\r\n  styleUrls: ['./application.component.scss']\r\n})\r\nexport class ApplicationComponent implements OnInit {\r\n\r\n  public language = environment.language;\r\n  public modalTitle: string;\r\n  public saveButtonText = 'Save';\r\n  public form: FormGroup;\r\n  public descriptionForm: FormGroup;\r\n  public showModal = false;\r\n  public editId: string;\r\n\r\n  applications = [\r\n    {\r\n      systemId: 'SVC',\r\n      systemDescription: 'SVC',\r\n      translations: [\r\n        {\r\n          id: 1,\r\n          keyVal: 'SVC',\r\n          langId: 1,\r\n          value: 'Single View Customer'\r\n        },\r\n        {\r\n          id: 2,\r\n          keyVal: 'SVC',\r\n          langId: 2,\r\n          value: '单视图客户'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private localdata: LocalDataService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n\r\n    if (environment.staticData){\r\n\r\n      if (!this.localdata.get('applications')){\r\n        this.localdata.save('applications', this.applications);\r\n      } else {\r\n        this.applications = this.localdata.get('applications');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  private async loadData(): Promise<any>{\r\n    this.applications = [];\r\n    const list =  await this.api.list('application/getAllApplication').toPromise();\r\n    this.applications = list.lstApplications;\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      systemId: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  showAppForm(type: string, app?: IApplication): void {\r\n    if (type === 'add') {\r\n      this.modalTitle = 'New Application';\r\n      this.saveButtonText = 'Save';\r\n      this.editId = null;\r\n    } else {\r\n      this.saveButtonText = 'Update';\r\n      this.modalTitle = `Edit ${app.systemId}`;\r\n      this.editId = app.systemId;\r\n      this.form.get('systemId').patchValue(app.systemId);\r\n      setTimeout( x => {\r\n        this.appendCurrentTranslations(app.translations);\r\n      }, 0);\r\n    }\r\n\r\n    this.showModal = true;\r\n  }\r\n\r\n  private appendCurrentTranslations(translations: any[]): void{\r\n    translations.forEach( x => {\r\n      const group = this.formBuilder.group({\r\n        language: [x.langId.toString(), Validators.required],\r\n        value: [x.value, Validators.required]\r\n      });\r\n      (this.form.get('translations') as FormArray).push(group);\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.form.reset();\r\n    this.showModal = false;\r\n  }\r\n\r\n\r\n  async submitForm(): Promise<any> {\r\n    this.form.markAllAsTouched();\r\n    const {systemId, translations}: IApplication = this.form.value;\r\n    if (this.form.invalid) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n\r\n    if (!this.englishExist(translations)) {\r\n      alert('English translation is required');\r\n      return;\r\n    }\r\n\r\n    this.showModal = false;\r\n    const descriptions = translations.map( x => {\r\n      return {\r\n        keyVal: systemId,\r\n        langId: Number(x.language),\r\n        value: x.value\r\n      };\r\n    });\r\n\r\n    const data = {\r\n      systemDescription: systemId,\r\n      systemId,\r\n      translations: descriptions\r\n    };\r\n\r\n    if (this.modalTitle.includes('Edit')) {\r\n      // await this.updateApplication(data);\r\n      return;\r\n    }\r\n    await this.createApplication(data);\r\n  }\r\n\r\n\r\n  // async updateApplication(data): Promise<any>{\r\n  //   const updateData = {\r\n  //     oldSystemId: this.editId,\r\n  //     ...data\r\n  //   };\r\n\r\n  //   if (environment.staticData){\r\n  //     this.updateApplicationList(data.systemId, updateData.translations);\r\n  //     this.saveLocalData();\r\n  //     return;\r\n  //   }\r\n\r\n  //   const updated = await this.api.create('application/updateApplication', updateData).toPromise();\r\n  //   this.updateApplicationList(data.systemId, updated.application.translations);\r\n  //   this.form.reset();\r\n  // }\r\n\r\n  private updateApplicationList(systemId, translations): void{\r\n    this.applications = this.applications.map( x => {\r\n      if ( x.systemId === this.editId ) {\r\n        x.systemId = systemId;\r\n        x.translations = translations;\r\n      }\r\n      return x;\r\n    });\r\n  }\r\n\r\n  async createApplication(data): Promise<any>{\r\n    if (environment.staticData){\r\n      this.applications.push({\r\n        systemId: data.systemId,\r\n        systemDescription: data.systemId,\r\n        translations: data.translations.map( x => {\r\n          return {\r\n            id: new Date().getTime(),\r\n            ...x\r\n          };\r\n        })\r\n      });\r\n      this.saveLocalData();\r\n      this.form.reset();\r\n      return;\r\n    }\r\n    const saved = await this.api.create('application/createApplication', data).toPromise();\r\n    this.form.reset();\r\n    this.applications.push(saved.application);\r\n  }\r\n\r\n  englishExist(translations): boolean {\r\n    const found = translations.filter( x => x.language === '1').length > 0;\r\n    return found;\r\n  }\r\n\r\n  async delete(app: IApplication): Promise<any> {\r\n    const sure = confirm('Are you sure?');\r\n    if (!sure){\r\n      return;\r\n    }\r\n\r\n    if (environment.staticData){\r\n      this.applications = this.applications.filter( x => {\r\n        return x.systemId !== app.systemId;\r\n      });\r\n      this.saveLocalData();\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      oldSystemId: app.systemId,\r\n      ...app\r\n    };\r\n    await this.api.create('application/deleteApplication', data).toPromise();\r\n    this.applications = this.applications.filter( x => x.systemId !== app.systemId);\r\n  }\r\n\r\n  view(app: IApplication): void{\r\n    this.localdata.save('application', app);\r\n    setTimeout( x => {\r\n      this.router.navigate(['application', app.systemId]);\r\n    }, 250);\r\n  }\r\n\r\n  private saveLocalData(): void{\r\n    this.localdata.save('applications', this.applications);\r\n  }\r\n}\r\n","<nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Application</li>\r\n    </ol>\r\n</nav>\r\n\r\n<div class=\"table-list\">\r\n    <div class=\"table-list__buttons\">\r\n        <label></label>\r\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"showAppForm('add')\">Add New Application</button>\r\n    </div>\r\n\r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">System ID</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let app of applications\"> \r\n                <td>{{app.systemId}} </td>\r\n                <td>{{app.translations | itranslate}}</td>\r\n                <td class=\"table-list__actions\">\r\n                    <!-- <a (click)=\"view(app)\">view</a> | \r\n                    <a (click)=\"showAppForm('edit', app)\">edit</a> |  -->\r\n                    <a (click)=\"view(app)\">edit</a>\r\n                    <a (click)=\"delete(app)\">delete</a>\r\n                </td>\r\n            </tr> \r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<app-modal\r\n    [show]=\"showModal\"\r\n    [saveBtn]=\"saveButtonText\"\r\n    [closeBtn]=\"'Cancel'\"\r\n    [title]=\"modalTitle\"\r\n    (close)=\"closeModal()\"\r\n    (submit)=\"submitForm()\"\r\n>\r\n    <form [formGroup]=\"form\" *ngIf=\"form\">\r\n        <div class=\"form-group\">\r\n            <label>System ID</label> \r\n            <input \r\n              formControlName=\"systemId\" type=\"text\" class=\"form-control\" \r\n              [ngClass]=\"{'is-invalid': form.controls.systemId.invalid && form.controls.systemId.touched}\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Description: </label>\r\n            <!-- <textarea formControlName=\"description\" type=\"text\" class=\"form-control\" ></textarea> -->\r\n            <app-language-field [title]=\"'Description'\" [form]=\"form\" *ngIf=\"showModal\"></app-language-field> \r\n        </div>\r\n    </form>\r\n</app-modal>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      name: 'test'\r\n    });\r\n  }\r\n\r\n}\r\n","<p>test works!</p>\r\n\r\n<form [formGroup]=\"form\">\r\n    <input type=\"text\" formControlName=\"name\">\r\n</form>"],"sourceRoot":"webpack:///"}